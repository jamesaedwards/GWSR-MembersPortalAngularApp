{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\james\\\\source\\\\repos\\\\GWSR\\\\GWRTMemberAngularApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { GlobalSettings } from '../GlobalSettings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TarrifService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = GlobalSettings.baseApiUrl;\n    this.tarrifs = [];\n  }\n\n  loadTarrifs() {\n    return this.http.get(this.baseUrl + 'tarrif').subscribe({\n      next: r => {\n        this.tarrifs = r;\n        console.log('Tarrifs Loaded');\n      },\n      error: e => {\n        alert('Error getting tarrif data. Please try again later.');\n      }\n    });\n  }\n\n  getTarrifs() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.tarrifs.length == 0) {\n        yield _this.loadTarrifs();\n      }\n\n      console.log(_this.tarrifs.length);\n      return _this.tarrifs;\n    })();\n  }\n\n  setCategory(cat) {\n    this.selectedCategory = cat;\n  }\n\n  setTarrif(tar) {\n    this.selectedTarrif = tar;\n  }\n\n  getSelectedTarrifId() {\n    return this.selectedTarrif.id;\n  }\n\n  getSelectedTarrifSeats() {\n    return this.selectedCategory.seats;\n  }\n\n}\n\nTarrifService.ɵfac = function TarrifService_Factory(t) {\n  return new (t || TarrifService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nTarrifService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TarrifService,\n  factory: TarrifService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/james/source/repos/GWSR/GWRTMemberAngularApp/src/app/shared/tarrif.service.ts"],"names":["GlobalSettings","i0","i1","TarrifService","constructor","http","baseUrl","baseApiUrl","tarrifs","loadTarrifs","get","subscribe","next","r","console","log","error","e","alert","getTarrifs","length","setCategory","cat","selectedCategory","setTarrif","tar","selectedTarrif","getSelectedTarrifId","id","getSelectedTarrifSeats","seats","ɵfac","TarrifService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeN,cAAc,CAACO,UAA9B;AACA,SAAKC,OAAL,GAAe,EAAf;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAc,KAAKJ,OAAL,GAAe,QAA7B,EAAuCK,SAAvC,CAAiD;AACpDC,MAAAA,IAAI,EAAGC,CAAD,IAAO;AACT,aAAKL,OAAL,GAAeK,CAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,OAJmD;AAKpDC,MAAAA,KAAK,EAAGC,CAAD,IAAO;AACVC,QAAAA,KAAK,CAAC,oDAAD,CAAL;AACH;AAPmD,KAAjD,CAAP;AASH;;AACKC,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,UAAI,KAAI,CAACX,OAAL,CAAaY,MAAb,IAAuB,CAA3B,EAA8B;AAC1B,cAAM,KAAI,CAACX,WAAL,EAAN;AACH;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACP,OAAL,CAAaY,MAAzB;AACA,aAAO,KAAI,CAACZ,OAAZ;AALe;AAMlB;;AACDa,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKC,gBAAL,GAAwBD,GAAxB;AACH;;AACDE,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,SAAKC,cAAL,GAAsBD,GAAtB;AACH;;AACDE,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKD,cAAL,CAAoBE,EAA3B;AACH;;AACDC,EAAAA,sBAAsB,GAAG;AACrB,WAAO,KAAKN,gBAAL,CAAsBO,KAA7B;AACH;;AAnCsB;;AAqC3B3B,aAAa,CAAC4B,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAI9B,aAAV,EAAyBF,EAAE,CAACiC,QAAH,CAAYhC,EAAE,CAACiC,UAAf,CAAzB,CAAP;AAA8D,CAAvH;;AACAhC,aAAa,CAACiC,KAAd,GAAsB,aAAcnC,EAAE,CAACoC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnC,aAAT;AAAwBoC,EAAAA,OAAO,EAAEpC,aAAa,CAAC4B,IAA/C;AAAqDS,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { GlobalSettings } from '../GlobalSettings';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class TarrifService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.baseUrl = GlobalSettings.baseApiUrl;\r\n        this.tarrifs = [];\r\n    }\r\n    loadTarrifs() {\r\n        return this.http.get(this.baseUrl + 'tarrif').subscribe({\r\n            next: (r) => {\r\n                this.tarrifs = r;\r\n                console.log('Tarrifs Loaded');\r\n            },\r\n            error: (e) => {\r\n                alert('Error getting tarrif data. Please try again later.');\r\n            }\r\n        });\r\n    }\r\n    async getTarrifs() {\r\n        if (this.tarrifs.length == 0) {\r\n            await this.loadTarrifs();\r\n        }\r\n        console.log(this.tarrifs.length);\r\n        return this.tarrifs;\r\n    }\r\n    setCategory(cat) {\r\n        this.selectedCategory = cat;\r\n    }\r\n    setTarrif(tar) {\r\n        this.selectedTarrif = tar;\r\n    }\r\n    getSelectedTarrifId() {\r\n        return this.selectedTarrif.id;\r\n    }\r\n    getSelectedTarrifSeats() {\r\n        return this.selectedCategory.seats;\r\n    }\r\n}\r\nTarrifService.ɵfac = function TarrifService_Factory(t) { return new (t || TarrifService)(i0.ɵɵinject(i1.HttpClient)); };\r\nTarrifService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TarrifService, factory: TarrifService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}