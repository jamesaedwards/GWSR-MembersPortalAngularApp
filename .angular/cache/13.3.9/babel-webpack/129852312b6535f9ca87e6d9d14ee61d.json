{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../renew.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction SecurityLookupComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \"This doesn't appear to be right.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/renew/resend\"];\n};\n\nexport let SecurityLookupComponent = /*#__PURE__*/(() => {\n  class SecurityLookupComponent {\n    constructor(renewService, route) {\n      this.renewService = renewService;\n      this.route = route;\n      this.securityForm = new FormGroup({\n        renewSecurityLett: new FormControl('', [Validators.required, Validators.pattern('^[A-Z]{2}$')]),\n        renewSecurityCode1: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{4}$')]),\n        renewSecurityCode2: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{4}$')]),\n        renewSecurityCode3: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{4}$')])\n      });\n      this.securityFormError = '';\n      this.securityForm2 = new FormGroup({\n        securityCode: new FormControl('', [Validators.required, Validators.minLength(14), Validators.maxLength(17), Validators.pattern('^[A-Z]{2}[0-9]{12}$')])\n      });\n      this.showLoading = new EventEmitter();\n      this.stopLoading = new EventEmitter();\n      this.onRenewalStarted = new EventEmitter();\n    }\n\n    getSecurityCode() {\n      var _a, _b, _c, _d;\n\n      return ((_a = this.securityForm.get('renewSecurityLett')) === null || _a === void 0 ? void 0 : _a.value) + '-' + ((_b = this.securityForm.get('renewSecurityCode1')) === null || _b === void 0 ? void 0 : _b.value) + ((_c = this.securityForm.get('renewSecurityCode2')) === null || _c === void 0 ? void 0 : _c.value) + ((_d = this.securityForm.get('renewSecurityCode3')) === null || _d === void 0 ? void 0 : _d.value);\n    }\n\n    getSecurityCode2() {\n      var _a;\n\n      return (_a = this.securityForm2.get('securityCode')) === null || _a === void 0 ? void 0 : _a.value.replace(/ /g, '');\n    }\n\n    ngOnInit() {\n      try {\n        this.route.queryParams.subscribe(params => {\n          var _a;\n\n          (_a = this.securityForm2.get('securityCode')) === null || _a === void 0 ? void 0 : _a.setValue(params['id']);\n        }).unsubscribe();\n\n        if (this.getSecurityCode2() !== '') {\n          console.log('Code is: ', this.getSecurityCode2());\n          this.starRenewalProcess();\n        }\n      } catch (e) {}\n    }\n\n    starRenewalProcess() {\n      console.log(this.getSecurityCode2());\n      this.showLoading.emit();\n      this.securityFormError = '';\n\n      if (this.securityForm2.valid == false) {\n        this.securityFormError = 'Please check your security code, as it appears to be in the wrong format.';\n        this.stopLoading.emit();\n        return;\n      }\n\n      this.renewService.getRenewal(this.getSecurityCode2()).subscribe({\n        next: res => {\n          this.renewalData = res;\n          this.showLoading.emit();\n          this.onRenewalStarted.emit(res);\n        },\n        error: er => {\n          console.log(er);\n          this.securityFormError = er.error.message;\n          this.stopLoading.emit();\n        },\n        complete: () => {\n          this.stopLoading.emit();\n        }\n      });\n    }\n\n  }\n\n  SecurityLookupComponent.ɵfac = function SecurityLookupComponent_Factory(t) {\n    return new (t || SecurityLookupComponent)(i0.ɵɵdirectiveInject(i1.RenewService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  SecurityLookupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SecurityLookupComponent,\n    selectors: [[\"app-security-lookup\"]],\n    outputs: {\n      showLoading: \"showLoading\",\n      stopLoading: \"stopLoading\",\n      onRenewalStarted: \"onRenewalStarted\"\n    },\n    decls: 16,\n    vars: 7,\n    consts: [[1, \"text-big\"], [1, \"text-error\"], [3, \"formGroup\", \"submit\"], [3, \"className\"], [\"id\", \"security-code1\", \"placeholder\", \"AB123412341234\", \"type\", \"text\", \"formControlName\", \"securityCode\", \"maxlength\", \"17\", \"autofocus\", \"\", \"oninput\", \"this.value = this.value.toUpperCase()\"], [\"class\", \"text-error text-small\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"button\", 3, \"disabled\"], [3, \"routerLink\"], [1, \"text-error\", \"text-small\"]],\n    template: function SecurityLookupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Renewal Security Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"Please enter the security code that was included in your renewal letter or email. Please don't include the spaces. The code is made up of 2 letters then 12 numbers.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\", 1);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function SecurityLookupComponent_Template_form_submit_6_listener() {\n          return ctx.starRenewalProcess();\n        });\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, SecurityLookupComponent_p_9_Template, 2, 0, \"p\", 5);\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Start Renewal\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \"Lost your security code?...\");\n        i0.ɵɵelementStart(14, \"a\", 7);\n        i0.ɵɵtext(15, \"Click Here\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.securityFormError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.securityForm2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"className\", ctx.securityForm2.controls[\"securityCode\"].invalid && ctx.securityForm2.controls[\"securityCode\"].touched ? \"has-error input input-fullWidth\" : \"input input-fullWidth\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.securityForm2.controls[\"securityCode\"].invalid && ctx.securityForm2.controls[\"securityCode\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.securityForm2.valid == false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.MaxLengthValidator, i4.NgIf, i2.RouterLinkWithHref],\n    styles: [\"input[_ngcontent-%COMP%]   .ng-valid[_ngcontent-%COMP%]{border:1px green solid}\"]\n  });\n  return SecurityLookupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}